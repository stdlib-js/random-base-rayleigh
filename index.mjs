// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";function f(t,e){return e*h(-2*j(t()))}function g(){var h,j,g,c;if(0===arguments.length)g=l();else if(1===arguments.length&&r(arguments[0]))if(o(j=arguments[0],"prng")){if(!i(j.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));g=j.prng}else g=l(j);else{if(!s(h=arguments[0]))throw new TypeError(u("invalid argument. First argument must be a positive number. Value: `%s`.",h));if(arguments.length>1){if(!r(j=arguments[1]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",j));if(o(j,"prng")){if(!i(j.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",j.prng));g=j.prng}else g=l(j)}else g=l()}return t(c=void 0===h?O:E,"NAME","rayleigh"),j&&j.prng?(t(c,"seed",null),t(c,"seedLength",null),n(c,"state",m(null),d),t(c,"stateLength",null),t(c,"byteLength",null),t(c,"toJSON",m(null)),t(c,"PRNG",g)):(e(c,"seed",v),e(c,"seedLength",b),n(c,"state",w,L),e(c,"stateLength",x),e(c,"byteLength",y),t(c,"toJSON",N),t(c,"PRNG",g),g=g.normalized),c;function v(){return g.seed}function b(){return g.seedLength}function x(){return g.stateLength}function y(){return g.byteLength}function w(){return g.state}function L(t){g.state=t}function N(){var t={type:"PRNG"};return t.name=c.NAME,t.state=p(g.state),t.params=void 0===h?[]:[h],t}function E(){return f(g,h)}function O(t){return a(t)||t<=0?NaN:f(g,t)}}var c=g();t(c,"factory",g);export{c as default,g as factory};
//# sourceMappingURL=index.mjs.map
